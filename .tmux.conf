# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"
# set-option -g default-command "reattach-to-user-namespace -l zsh"


# use C-w
set-option -g prefix ,
unbind-key ,
bind-key , send-prefix
set -g base-index 1

# TMUXLINE
set -g status-bg colour234
set -g status-fg colour172
set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/etcetera/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/etcetera/tmux-powerline/powerline.sh right)"
set-option -g status-position bottom

#Bindings to activate deactivate tmux line
unbind `
bind ` run '~/etcetera/tmux-powerline/mute_powerline.sh right && ~/etcetera/tmux-powerline/mute_powerline.sh left'    

# Special bind for <leader> <space> to forward ", " to shell to avoid confusion while typing commands and commits
bind-key space send-keys ", "

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# set scroll history
set -g history-limit 30000

# mouse behavior
set -g mouse on

set-option -g default-terminal screen-256color

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

# using t and T for window navigation         
bind-key t next-window
bind-key T previous-window

# Using space and backspace for window navigation
# bind-key space next-window
# bind-key bspace previous-window

#layout navigation
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# Normal navigation, replaced by vim/tmux nav. 
# bind-key h select-pane -L
# bind-key j select-pane -D
# bind-key k select-pane -U
# bind-key l select-pane -R

# enable smart pane switching with awareness of vim splits
# https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" "send-keys ,h"  "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys ,j"  "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys ,k"  "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys ,l"  "select-pane -R"
bind-key n if-shell "$is_vim" "send-keys ,n"  "none"
# bind-key p if-shell "$is_vim" "send-keys ,p"  "none"
# bind-key p if-shell "$is_vim" "send-keys ,p"  "run-shell \"tmux unbind ,; tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer; tmux bind-key , send-prefix\""

#resizing panes
bind C-j resize-pane -D 10
bind C-k resize-pane -U 10
bind C-h resize-pane -L 10
bind C-l resize-pane -R 10

# bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical
set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

bind-key a last-pane
bind-key q display-panes
bind-key w new-window
# unbind n

bind-key c copy-mode
# bind-key p paste-buffer "reattach-to-user-namespace pbpaste"
bind-key p run "tmux unbind ,; reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer; tmux bind-key , send-prefix"
# bind-key p run-shell "tmux unbind ,; tmux set-buffer \"$(pbpaste)\"; tmux paste-buffer; tmux bind-key , send-prefix"
 

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

set-window-option -g display-panes-time 1500

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on




# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Fix to allow mousewheel/trackpad scrolling in tmux 2.1
bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

# Disable assume-paste-time, so that iTerm2's "Send Hex Codes" feature works
# with tmux 2.1. This is backwards-compatible with earlier versions of tmux,
# AFAICT.
set-option -g assume-paste-time 0
